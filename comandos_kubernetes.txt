docker save -o newdock_image.docker newdock

docker tag newdock_app gcr.io/m0b1-227701/newdock_app:tag1

docker push gcr.io/m0b1-227701/newdock_app:tag1

kubectl run newdock-web --image=gcr.io/m0b1-227701/newdock_app:v1 --port 4000

kubectl expose deployment newdock-web --type=LoadBalancer --port 80 --target-port 4000

docker build -t gcr.io/m0b1-227701/newdock_app:v1 .

gcloud docker -- push gcr.io/m0b1-227701/newdock_app:v1

docker run --rm -p 4000:4000 gcr.io/m0b1-227701/newdock_app:v1



kubectl run newdock-web --replicas=2 --labels="run=newdock-web" --image=gcr.io/m0b1-227701/newdock_app:tag1 --port=4000

kubectl expose deployment newdock-web --type=NodePort --name=newdock-web-service

kubectl describe services newdock-web-service

INSERÇÃO
docker build -t gcr.io/m0b1-227701/newdock:v1 .
gcloud docker -- push gcr.io/m0b1-227701/newdock:v1
docker run --rm gcr.io/m0b1-227701/newdock:v1
gcloud container clusters get-credentials teste --zone us-central1-a
kubectl run newdock --image=gcr.io/m0b1-227701/newdock:v1 --port 80
kubectl expose deployment newdock --type=LoadBalancer --port 80 --target-port 80

ATUALIZAÇÃO
docker build -t gcr.io/m0b1-227701/newdock:v2 .
gcloud docker -- push gcr.io/m0b1-227701/newdock:v2
kubectl set image deployment/newdock-web newdock-web=gcr.io/m0b1-227701/newdock:v2


"mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo:27017/dbname_?"

docker build -t gcr.io/m0b1-227701/m0b1-api:v1 .
gcloud docker -- push gcr.io/m0b1-227701/m0b1-api:v1
docker run --rm -p 4000:4000 gcr.io/m0b1-227701/m0b1-api:v1
gcloud container clusters get-credentials hello-world --zone us-central1-f
kubectl run m0b1-api-web --image=gcr.io/m0b1-227701/m0b1-api:v1 --port 4000
kubectl expose deployment m0b1-api-web --type=LoadBalancer --port 4000 --target-port 4000

ATUALIZAÇÃO
docker build -t gcr.io/m0b1-227701/m0b1-api:v2 .
gcloud docker -- push gcr.io/m0b1-227701/m0b1-api:v2
kubectl set image deployment/m0b1-api-web m0b1-api-web=gcr.io/m0b1-227701/m0b1-api:v2


MONGO
kubectl exec -ti mongo-0 mongo
kubectl port-forward svc/mongo 27017:27017 --namespace default

ATUALIZAÇÃO
docker build -t gcr.io/m0b1-227701/m0b1:v18 .
gcloud docker -- push gcr.io/m0b1-227701/m0b1:v18
kubectl set image deployment/m0b1 m0b1=gcr.io/m0b1-227701/m0b1:v18

##################################################################3

docker build -t gcr.io/m0b1-227701/m0b1-api:v1 .
gcloud docker -- push gcr.io/m0b1-227701/m0b1-api:v1
gcloud container clusters get-credentials teste3 --zone us-central1-a
kubectl create -f deployment.yml
kubectl expose deployment m0b1-api --type=LoadBalancer
kubectl create -f ingress.yml
 
docker build -t gcr.io/m0b1-227701/m0b1-api:v2 .
gcloud docker -- push gcr.io/m0b1-227701/m0b1-api:v2
kubectl set image deployment/m0b1-api m0b1-api=gcr.io/m0b1-227701/m0b1-api:v2

 kubectl create secret tls letsencrypt --key server.key --cert server.crt
 
 ###############################################################3
 kubectl create secret generic shared-bootstrap-data –from file=internal-auth-mongodb-keyfile= C:\OpenSSL-Win32\bin\openssl.exe rand -base64 741